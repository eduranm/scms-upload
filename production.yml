version: '3'

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: upload_production_django
    container_name: upload_production_django
    platform: linux/x86_64
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    ports:
      - "8000:8000"
    command: /start

  nginx:
      image: nginx:latest
      container_name: upload_nginx
      volumes:
          - ./nginx/conf.d:/etc/nginx/conf.d
          - ./nginx/logs:/var/log/nginx/
      ports:
          - "80:80"

  pgbouncer:
    image: edoburu/pgbouncer:1.14.0
    container_name: upload_production_pgbouncer
    restart: always
    environment:
      - DATABASE_URL=postgres://GVRFlLmcCNfGLhsFvSnCioYOPJPYpyfj:BQ4hSUL4rdj5WZLdR8ilDLRQMvCtzo0caMaXDO0olGsmycQjlcZlTVK9DepZR8kk@postgres/uploaddb
      - MAX_CLIENT_CONN=100
    ports:
      - 6434:5432
    depends_on:
      - postgres
    links:
      - postgres

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: upload_production_postgres
    container_name: upload_production_postgres
    volumes:
      - ../scms_data/data_prod:/var/lib/postgresql/data:Z
      - ../scms_data/data_prod_backup:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: redis:6
    container_name: upload_production_redis

  celeryworker:
    <<: *django
    image: upload_production_celeryworker
    container_name: upload_production_celeryworker
    command: /start-celeryworker
    ports: []

  celerybeat:
    <<: *django
    image: upload_production_celerybeat
    container_name: upload_production_celerybeat
    command: /start-celerybeat
    ports: []

  flower:
    <<: *django
    image: upload_production_flower
    container_name: upload_production_flower
    command: /start-flowe
    ports: []